const int red1 = 2;       // North side road
const int yellow1 = 3;
const int green1 = 4;
const int red2 = 5;       // West side road
const int yellow2 = 6;
const int green2 = 7;
const int red3 = 8;       // South side road
const int yellow3 = 9;
const int green3 = 10;
const int red4 = 11;      // East side road
const int yellow4 = 12;
const int green4 = 13;

const int SRCLK = A0;     // SR Clock pin
const int DATA = A1;      // Data pin
const int STB = A2;       // Strobe pin

int segmentDigits[] = {
  0b00111111, // 0
  0b00000110, // 1
  0b01011011, // 2
  0b01001111, // 3
  0b01100110, // 4
  0b01101101, // 5
  0b01111101, // 6
  0b00000111, // 7
  0b01111111, // 8
  0b01101111  // 9
};

void setup() {
  pinMode(red1, OUTPUT);
  pinMode(yellow1, OUTPUT);
  pinMode(green1, OUTPUT);
  pinMode(red2, OUTPUT);
  pinMode(yellow2, OUTPUT);
  pinMode(green2, OUTPUT);
  pinMode(red3, OUTPUT);
  pinMode(yellow3, OUTPUT);
  pinMode(green3, OUTPUT);
  pinMode(red4, OUTPUT);
  pinMode(yellow4, OUTPUT);
  pinMode(green4, OUTPUT);

  pinMode(SRCLK, OUTPUT);
  pinMode(DATA, OUTPUT);
  pinMode(STB, OUTPUT);

  digitalWrite(red1, HIGH);
  digitalWrite(yellow1, LOW);
  digitalWrite(green1, LOW);
  digitalWrite(red2, HIGH);
  digitalWrite(yellow2, LOW);
  digitalWrite(green2, LOW);
  digitalWrite(red3, HIGH);
  digitalWrite(yellow3, LOW);
  digitalWrite(green3, LOW);
  digitalWrite(red4, HIGH);
  digitalWrite(yellow4, LOW);
  digitalWrite(green4, LOW);
}

void loop() {
  int YellowTime = 10000;
  int GreenTime = 30000;

  // North and South green, East and West red
  digitalWrite(red1, LOW);
  digitalWrite(yellow1, LOW);
  digitalWrite(green1, HIGH);
  digitalWrite(red3, LOW);
  digitalWrite(yellow3, LOW);
  digitalWrite(green3, HIGH);
  digitalWrite(red2, HIGH);
  digitalWrite(yellow2, LOW);
  digitalWrite(green2, LOW);
  digitalWrite(red4, HIGH);
  digitalWrite(yellow4, LOW);
  digitalWrite(green4, LOW);
  for (int i = GreenTime / 1000; i >= 0; i--) {
    displayTime(i);
    delay(1000);
  }

  // North and South yellow
  digitalWrite(red1, LOW);
  digitalWrite(yellow1, HIGH);
  digitalWrite(green1, LOW);
  digitalWrite(red3, LOW);
  digitalWrite(yellow3, HIGH);
  digitalWrite(green3, LOW);
  for (int i = YellowTime / 1000; i >= 0; i--) {
    displayTime(i);
    delay(1000);
  }

  // North and South red, East and West green
  digitalWrite(red1, HIGH);
  digitalWrite(yellow1, LOW);
  digitalWrite(green1, LOW);
  digitalWrite(red3, HIGH);
  digitalWrite(yellow3, LOW);
  digitalWrite(green3, LOW);
  digitalWrite(red2, LOW);
  digitalWrite(yellow2, LOW);
  digitalWrite(green2, HIGH);
  digitalWrite(red4, LOW);
  digitalWrite(yellow4, LOW);
  digitalWrite(green4, HIGH);
  for (int i = GreenTime / 1000; i >= 0; i--) {
    displayTime(i);
    delay(1000);
  }

  // East and West yellow
  digitalWrite(red2, LOW);
  digitalWrite(yellow2, HIGH);
  digitalWrite(green2, LOW);
  digitalWrite(red4, LOW);
  digitalWrite(yellow4, HIGH);
  digitalWrite(green4, LOW);
  for (int i = YellowTime / 1000; i >= 0; i--) {
    displayTime(i);
    delay(1000);
  }

  // Repeat the cycle
}

void displayTime(int time) {
  digitalWrite(STB, LOW);
  shiftOut(DATA, SRCLK, MSBFIRST, segmentDigits[time % 10]); // Units place in the first display
  shiftOut(DATA, SRCLK, MSBFIRST, segmentDigits[time / 10]); // Tens place in the second display
  digitalWrite(STB, HIGH);
}
